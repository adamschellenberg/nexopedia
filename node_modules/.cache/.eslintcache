[{"C:\\Users\\adams\\Documents\\Nexopedia\\src\\index.js":"1","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\index.js":"2","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\HomePage\\index.js":"3","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\DatabasePage\\index.js":"4","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\GuidesPage\\index.js":"5","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\LocationsPage\\index.js":"6","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\ItemsPage\\index.js":"7","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\HomePage\\HomePage.js":"8","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\DatabasePage\\DatabasePage.js":"9","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\GuidesPage\\GuidesPage.js":"10","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\LocationsPage\\LocationsPage.js":"11","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\ItemsPage\\ItemsPage.js":"12","C:\\Users\\adams\\Documents\\Nexopedia\\src\\api\\server.js":"13","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\Footer\\index.js":"14","C:\\Users\\adams\\Documents\\Nexopedia\\src\\api\\index.js":"15","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\NavBar\\index.js":"16","C:\\Users\\adams\\Documents\\Nexopedia\\src\\custom-hooks\\index.js":"17","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\Footer\\Footer.js":"18","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\NavBar\\NavBar.js":"19","C:\\Users\\adams\\Documents\\Nexopedia\\src\\custom-hooks\\FetchData.js":"20"},{"size":776,"mtime":1668016629551,"results":"21","hashOfConfig":"22"},{"size":155,"mtime":1668016521304,"results":"23","hashOfConfig":"22"},{"size":27,"mtime":1666113031753,"results":"24","hashOfConfig":"22"},{"size":31,"mtime":1666315711273,"results":"25","hashOfConfig":"22"},{"size":29,"mtime":1666315711298,"results":"26","hashOfConfig":"22"},{"size":32,"mtime":1666315711388,"results":"27","hashOfConfig":"22"},{"size":28,"mtime":1666315711356,"results":"28","hashOfConfig":"22"},{"size":1151,"mtime":1667399492394,"results":"29","hashOfConfig":"22"},{"size":1677,"mtime":1667187584301,"results":"30","hashOfConfig":"22"},{"size":6915,"mtime":1667189243477,"results":"31","hashOfConfig":"22"},{"size":117,"mtime":1666315711374,"results":"32","hashOfConfig":"22"},{"size":5815,"mtime":1667189567079,"results":"33","hashOfConfig":"22"},{"size":1101,"mtime":1668016446038,"results":"34","hashOfConfig":"22"},{"size":25,"mtime":1666113031733,"results":"35","hashOfConfig":"22"},{"size":25,"mtime":1667099330139,"results":"36","hashOfConfig":"22"},{"size":25,"mtime":1666113031772,"results":"37","hashOfConfig":"22"},{"size":28,"mtime":1667099330167,"results":"38","hashOfConfig":"22"},{"size":373,"mtime":1666113031725,"results":"39","hashOfConfig":"22"},{"size":1427,"mtime":1668016762260,"results":"40","hashOfConfig":"22"},{"size":790,"mtime":1668016693827,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"pqsi5b",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},"C:\\Users\\adams\\Documents\\Nexopedia\\src\\index.js",["107"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport './index.css';\r\nimport { HomePage, DatabasePage, GuidesPage, ItemsPage, LocationsPage } from './components';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n\r\n    <BrowserRouter>\r\n      <Routes>\r\n\r\n        <Route path=\"/\" element={<HomePage />} />\r\n        <Route path=\"/database\" element={<DatabasePage />} />\r\n        <Route path=\"/guides\" element={<GuidesPage />} />\r\n        <Route path=\"/items\" element={<ItemsPage />} />\r\n        {/* <Route path=\"/locations\" element={<LocationsPage />} /> */}\r\n\r\n      </Routes>\r\n    </BrowserRouter>\r\n\r\n);\r\n","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\index.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\HomePage\\index.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\DatabasePage\\index.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\GuidesPage\\index.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\LocationsPage\\index.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\ItemsPage\\index.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\HomePage\\HomePage.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\DatabasePage\\DatabasePage.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\GuidesPage\\GuidesPage.js",["108"],[],"import React, { useState, useEffect } from 'react';\r\nimport { NavBar } from '../NavBar';\r\nimport { Footer } from '../Footer';\r\nimport { useGetData } from '../../custom-hooks';\r\nimport './GuidesPage.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport CosmicIndicator from '../../assets/images/cosmic-indicator.gif';\r\n\r\nexport const GuidesPage = () => {\r\n\r\n  const [statusData, setStatusData] = useState([]);\r\n  const [typeData, setTypeData] = useState([]);\r\n  const [vaultData, setVaultData] = useState([]);\r\n  const [keyData, setKeyData] = useState([]);\r\n\r\n  const getData = async () => {\r\n    const statusResult = await useGetData.useStatus();\r\n    const typeResult = await useGetData.useType();\r\n    const vaultResult = await useGetData.useVault();\r\n    const keyResult = await useGetData.useKey();\r\n\r\n    setStatusData(statusResult);\r\n    setTypeData(typeResult);\r\n    setVaultData(vaultResult);\r\n    setKeyData(keyResult);\r\n  };\r\n\r\n  useEffect( () => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"guidesBackground\">\r\n      <NavBar />\r\n      <Container>\r\n        <h1 className='display-3 guides-header text-center'>Guides and FAQ</h1>\r\n\r\n{/* Type Effectiveness Chart */}\r\n        <h6 className='display-6' id=\"type-chart-title\">Type Effectiveness Chart</h6>\r\n        <table className='table table-dark table-bordered table-sm' id=\"type-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Type</th>\r\n                  <th>Normal</th>\r\n                  <th>Fire</th>\r\n                  <th>Water</th>\r\n                  <th>Plant</th>\r\n                  <th>Wind</th>\r\n                  <th>Electric</th>\r\n                  <th>Mineral</th>\r\n                  <th>Ghost</th>\r\n                  <th>Psychic</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  typeData.map( (element) => {\r\n                    let displayType = element.type;\r\n                    let normal = element.normal;\r\n                    let fire = element.fire;\r\n                    let water = element.water;\r\n                    let plant = element.plant;\r\n                    let wind = element.wind;\r\n                    let electric = element.electric;\r\n                    let mineral = element.mineral;\r\n                    let ghost = element.ghost;\r\n                    let psychic = element.psychic;\r\n\r\n                    return (\r\n                      <tr>\r\n                        <td>{displayType}</td>\r\n                        <td>{normal}</td>\r\n                        <td>{fire}</td>\r\n                        <td>{water}</td>\r\n                        <td>{plant}</td>\r\n                        <td>{wind}</td>\r\n                        <td>{electric}</td>\r\n                        <td>{mineral}</td>\r\n                        <td>{ghost}</td>\r\n                        <td>{psychic}</td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                }\r\n              </tbody>\r\n            </table>\r\n\r\n{/* Status Effects Chart */}\r\n        <h6 className='display-6' id=\"status-effects-title\">Status Effects Chart</h6>\r\n        <table className='table table-dark table-bordered table-sm' id=\"status-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Status</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              statusData.map( (status) => {\r\n                let effect = status.effect;\r\n                let description = status.description;\r\n\r\n                return (\r\n                  <tr>\r\n                    <td>{effect}</td>\r\n                    <td>{description}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n\r\n{/* Vaults and Keys List */}\r\n        <h6 className='display-6' id=\"vaults-title\">Spencer's Vault and Key Locations</h6>\r\n        <h6>Keys:</h6>\r\n        <table className=\"table table-bordered table-dark table-sm\" id=\"key-table\">\r\n          <tbody>\r\n            {\r\n              keyData.map( (key) => {\r\n                let keyLocation = key.location;\r\n\r\n                return (\r\n                  <tr>\r\n                    <td>{keyLocation}</td>\r\n                  </tr>\r\n                )\r\n\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n        <h6>Vaults:</h6>\r\n        <table className='table table-bordered table-dark table-sm' id=\"vault-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Location</th>\r\n              <th>Rewards</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              vaultData.map( (vault) => {\r\n                let vaultLocation = vault.location;\r\n                let vaultContents = vault.contents;\r\n\r\n                  return (\r\n                    <tr>\r\n                      <td>{vaultLocation}</td>\r\n                      <td>{vaultContents}</td>\r\n                    </tr>\r\n                  )\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n\r\n{/* Cosmic Nexomon FAQ */}\r\n        <h6 className=\"display-6\" id=\"cosmic-title\">Cosmic Nexomon</h6>\r\n        <div className='cosmic-info'>\r\n        <ul>\r\n          <li><span className='font-weight-bold'>What is a cosmic Nexomon?</span> Cosmic Nexomon are the equivalent to shiny Pokemon. Color variants of the Nexomon you know and love.</li>\r\n                  <li><span className='font-weight-bold'>How will I know if a Nexomon is cosmic?</span> Cosmic Nexomon name boxes will flash red, like in the gif below.</li>\r\n                  <img src={CosmicIndicator} />\r\n          <li><span className='font-weight-bold'>What are the odds of finding a cosmic Nexomon?</span> The rate of finding a cosmic Nexomon starts at 1/4000 (0.025%) at the beginning of the game. However, as you progress through the game, this oods will increase as follows:</li>\r\n          <ul>\r\n            <li>Odds increase to 1/3500 (0.029%) after saving Ignitia, and increases again to 1/3000 (0.033%) after completing the Drake Isles chapter</li>\r\n            <li>The rate increases by 1 point for each uniquely seen Nexomon. Example: 1/3000 odds are increased to 1/2950, if you have seen 50 different Nexomon.</li>\r\n            <li>The rate increases by 2 points for each uniquely owned Nexomon. Example: 1/2950 odds are increased to 1/2900, if you have captured 50 different Nexomon.</li>\r\n            <li>The rate increases 50 points for each Cosmic Charm owned. Example: 1/2900 odds are increased to 1/2800, if two Cosmic Charms are owned.</li>\r\n            <li>The best possible odds of finding a cosmic Nexomon are 1/1607 (0.0622%), if you are in the late-game, have captured every Nexomon, and have found all five Cosmic Charms.</li>\r\n          </ul>\r\n\t\t\t  </ul>\r\n        </div>\r\n\r\n        <Footer />\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\LocationsPage\\LocationsPage.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\ItemsPage\\ItemsPage.js",["109","110","111","112","113","114"],[],"import React, { useEffect, useState } from 'react';\r\nimport './ItemsPage.css';\r\nimport { NavBar } from '../NavBar';\r\nimport { Footer } from '../Footer';\r\nimport { useGetData } from '../../custom-hooks';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nexport const ItemsPage = () => {\r\n  const [itemData, setItemData] = useState([]);\r\n\r\n  const getItemData = async () => {\r\n    const result = await useGetData.useItems();\r\n    setItemData(result);\r\n  }\r\n\r\n  useEffect( () => {\r\n    getItemData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"itemsBackground\">\r\n      <NavBar />\r\n      <Container>\r\n        <h1 className='display-3 items-header text-center'>Items</h1>\r\n\r\n        {/* Restoration Items table */}\r\n        <h6 className='display-6' id=\"restoration-title\">Restoration Items</h6>\r\n        <table className=\"table table-dark table-bordered table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              itemData\r\n                .filter(item => item.itemType == 'Restoration')\r\n                .map( (item) => {\r\n                  let itemName = item.name;\r\n                  let itemDescription = item.description;\r\n\r\n                  return(\r\n                    <tr>\r\n                      <td>{itemName}</td>\r\n                      <td>{itemDescription}</td>\r\n                    </tr>\r\n                  )\r\n                })\r\n            }\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* Nexotrap Items table */}\r\n        <h6 className='display-6' id=\"nexotrap-title\">Nexotrap Items</h6>\r\n        <table className=\"table table-dark table-bordered table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              itemData\r\n                .filter(item => item.itemType == 'Nexotrap')\r\n                .map( (item) => {\r\n                  let itemName = item.name;\r\n                  let itemDescription = item.description;\r\n\r\n                  return(\r\n                    <tr>\r\n                      <td>{itemName}</td>\r\n                      <td>{itemDescription}</td>\r\n                    </tr>\r\n                  )\r\n                })\r\n            }\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* Core Items table */}\r\n        <h6 className='display-6' id=\"core-title\">Core Items</h6>\r\n        <table className=\"table table-dark table-bordered table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              itemData\r\n                .filter(item => item.itemType == 'Core')\r\n                .map( (item) => {\r\n                  let itemName = item.name;\r\n                  let itemDescription = item.description;\r\n\r\n                  return(\r\n                    <tr>\r\n                      <td>{itemName}</td>\r\n                      <td>{itemDescription}</td>\r\n                    </tr>\r\n                  )\r\n                })\r\n            }\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* Shard Items table */}\r\n        <h6 className='display-6' id=\"shard-title\">Shard Items</h6>\r\n        <table className=\"table table-dark table-bordered table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              itemData\r\n                .filter(item => item.itemType == 'Shard')\r\n                .map( (item) => {\r\n                  let itemName = item.name;\r\n                  let itemDescription = item.description;\r\n\r\n                  return(\r\n                    <tr>\r\n                      <td>{itemName}</td>\r\n                      <td>{itemDescription}</td>\r\n                    </tr>\r\n                  )\r\n                })\r\n            }\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* Food Items table */}\r\n        <h6 className='display-6' id=\"food-title\">Food Items</h6>\r\n        <table className=\"table table-dark table-bordered table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              itemData\r\n                .filter(item => item.itemType == 'Food')\r\n                .map( (item) => {\r\n                  let itemName = item.name;\r\n                  let itemDescription = item.description;\r\n\r\n                  return(\r\n                    <tr>\r\n                      <td>{itemName}</td>\r\n                      <td>{itemDescription}</td>\r\n                    </tr>\r\n                  )\r\n                })\r\n            }\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* Key Items table */}\r\n        <h6 className='display-6' id=\"key-title\">Key Items</h6>\r\n        <table className=\"table table-dark table-bordered table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              itemData\r\n                .filter(item => item.itemType == 'Key Item')\r\n                .map( (item) => {\r\n                  let itemName = item.name;\r\n                  let itemDescription = item.description;\r\n\r\n                  return(\r\n                    <tr>\r\n                      <td>{itemName}</td>\r\n                      <td>{itemDescription}</td>\r\n                    </tr>\r\n                  )\r\n                })\r\n            }\r\n          </tbody>\r\n        </table>\r\n\r\n        <Footer />\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\adams\\Documents\\Nexopedia\\src\\api\\server.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\Footer\\index.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\api\\index.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\NavBar\\index.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\custom-hooks\\index.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\Footer\\Footer.js",["115"],[],"import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n        Nexopedia &copy; 2022 Adam Schellenberg. <br />\r\n        All Nexomon game images are property of <a href=\"https://pqube.co.uk/nexomon-extinction/\" target=\"_blank\">\r\n            Vewo Interactive Inc.\r\n            </a>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\adams\\Documents\\Nexopedia\\src\\components\\NavBar\\NavBar.js",[],[],"C:\\Users\\adams\\Documents\\Nexopedia\\src\\custom-hooks\\FetchData.js",["116"],[],"import React from 'react';\r\nimport { server_calls } from '../api';\r\n\r\nexport const useGetData = {\r\n    useItems: async () => {\r\n        const result = await server_calls.items();\r\n        return result;\r\n    },\r\n\r\n    useNexomon: async () => {\r\n        const result = await server_calls.nexomon();\r\n        return result;\r\n    },\r\n\r\n    useStatus: async () => {\r\n        const result = await server_calls.status();\r\n        return result;\r\n    },\r\n\r\n    useType: async () => {\r\n        const result = await server_calls.type();\r\n        return result;\r\n    },\r\n\r\n    useVault: async () => {\r\n        const result = await server_calls.vaults();\r\n        return result;\r\n    },\r\n\r\n    useKey: async () => {\r\n        const result = await server_calls.keys();\r\n        return result; \r\n    }\r\n}",{"ruleId":"117","severity":1,"message":"118","line":5,"column":57,"nodeType":"119","messageId":"120","endLine":5,"endColumn":70},{"ruleId":"121","severity":1,"message":"122","line":164,"column":19,"nodeType":"123","endLine":164,"endColumn":48},{"ruleId":"124","severity":1,"message":"125","line":38,"column":47,"nodeType":"126","messageId":"127","endLine":38,"endColumn":49},{"ruleId":"124","severity":1,"message":"125","line":66,"column":47,"nodeType":"126","messageId":"127","endLine":66,"endColumn":49},{"ruleId":"124","severity":1,"message":"125","line":94,"column":47,"nodeType":"126","messageId":"127","endLine":94,"endColumn":49},{"ruleId":"124","severity":1,"message":"125","line":122,"column":47,"nodeType":"126","messageId":"127","endLine":122,"endColumn":49},{"ruleId":"124","severity":1,"message":"125","line":150,"column":47,"nodeType":"126","messageId":"127","endLine":150,"endColumn":49},{"ruleId":"124","severity":1,"message":"125","line":178,"column":47,"nodeType":"126","messageId":"127","endLine":178,"endColumn":49},{"ruleId":"128","severity":1,"message":"129","line":8,"column":49,"nodeType":"123","messageId":"130","endLine":8,"endColumn":115,"fix":"131"},{"ruleId":"117","severity":1,"message":"132","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},"no-unused-vars","'LocationsPage' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"133","text":"134"},"'React' is defined but never used.",[297,297]," rel=\"noreferrer\""]