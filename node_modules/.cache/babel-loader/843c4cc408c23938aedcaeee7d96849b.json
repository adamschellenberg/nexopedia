{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/adams/Documents/Nexopedia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/adams/Documents/Nexopedia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/adams/Documents/Nexopedia/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{NavBar}from'../NavBar';import{useGetData}from'../../custom-hooks';import Container from'react-bootstrap/Container';import'./DatabasePage.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var DatabasePage=function DatabasePage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),nexomonData=_useState2[0],setNexomonData=_useState2[1];var getNexomonData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return useGetData.useNexomon();case 2:result=_context.sent;setNexomonData(result);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getNexomonData(){return _ref.apply(this,arguments);};}();useEffect(function(){getNexomonData();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"databaseBackground\"}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"display-3 databaseHeader text-center\",children:\"Nexomon Database\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-light table-bordered table-sm mx-auto\",id:\"database-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nexomon\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:nexomonData.map(function(nexomon){var nexomonNumber=nexomon.number;var nexomonName=nexomon.name;var nexomonType=nexomon.nexomonType;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:nexomonNumber}),/*#__PURE__*/_jsx(\"td\",{children:nexomonName}),/*#__PURE__*/_jsx(\"td\",{children:nexomonType})]});})})]})]})]});};","map":{"version":3,"names":["React","useState","useEffect","NavBar","useGetData","Container","DatabasePage","nexomonData","setNexomonData","getNexomonData","useNexomon","result","map","nexomon","nexomonNumber","number","nexomonName","name","nexomonType"],"sources":["C:/Users/adams/Documents/Nexopedia/src/components/DatabasePage/DatabasePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NavBar } from '../NavBar';\r\nimport { useGetData } from '../../custom-hooks';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './DatabasePage.css';\r\n\r\n\r\nexport const DatabasePage = () => {\r\n\r\n  const [nexomonData, setNexomonData] = useState([]);\r\n\r\n  const getNexomonData = async () => {\r\n    const result = await useGetData.useNexomon();\r\n    setNexomonData(result);\r\n  };\r\n\r\n  useEffect( () => {\r\n    getNexomonData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <NavBar />\r\n        <div className=\"databaseBackground\" />\r\n        <Container>\r\n          <h1 className=\"display-3 databaseHeader text-center\">\r\n            Nexomon Database\r\n          </h1>\r\n            <table className='table table-light table-bordered table-sm mx-auto' id=\"database-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Nexomon</th>\r\n                  <th>Type</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  nexomonData.map( (nexomon) => {\r\n                    let nexomonNumber = nexomon.number;\r\n                    let nexomonName = nexomon.name;\r\n                    let nexomonType = nexomon.nexomonType;\r\n\r\n                    return (\r\n                      <tr>\r\n                        <td>{nexomonNumber}</td>\r\n                        <td>{nexomonName}</td>\r\n                        <td>{nexomonType}</td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                }\r\n              </tbody>\r\n            </table>\r\n        </Container>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"wXAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,MAAM,KAAQ,WAAW,CAClC,OAASC,UAAU,KAAQ,oBAAoB,CAC/C,MAAOC,UAAS,KAAM,2BAA2B,CACjD,MAAO,oBAAoB,CAAC,wFAG5B,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAY,EAAS,CAEhC,cAAsCL,QAAQ,CAAC,EAAE,CAAC,wCAA3CM,WAAW,eAAEC,cAAc,eAElC,GAAMC,eAAc,4FAAG,sKACAL,WAAU,CAACM,UAAU,EAAE,QAAtCC,MAAM,eACZH,cAAc,CAACG,MAAM,CAAC,CAAC,sDACxB,kBAHKF,eAAc,0CAGnB,CAEDP,SAAS,CAAE,UAAM,CACfO,cAAc,EAAE,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACE,oCACI,KAAC,MAAM,IAAG,cACV,YAAK,SAAS,CAAC,oBAAoB,EAAG,cACtC,MAAC,SAAS,yBACR,WAAI,SAAS,CAAC,sCAAsC,8BAE/C,cACH,eAAO,SAAS,CAAC,mDAAmD,CAAC,EAAE,CAAC,gBAAgB,wBACtF,oCACE,mCACE,yBAAU,cACV,+BAAgB,cAChB,4BAAa,GACV,EACC,cACR,uBAEIF,WAAW,CAACK,GAAG,CAAE,SAACC,OAAO,CAAK,CAC5B,GAAIC,cAAa,CAAGD,OAAO,CAACE,MAAM,CAClC,GAAIC,YAAW,CAAGH,OAAO,CAACI,IAAI,CAC9B,GAAIC,YAAW,CAAGL,OAAO,CAACK,WAAW,CAErC,mBACE,mCACE,oBAAKJ,aAAa,EAAM,cACxB,oBAAKE,WAAW,EAAM,cACtB,oBAAKE,WAAW,EAAM,GACnB,CAET,CAAC,CAAC,EAEE,GACF,GACA,GACV,CAEV,CAAC"},"metadata":{},"sourceType":"module"}