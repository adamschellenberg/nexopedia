{"ast":null,"code":"import ItemsJSON from '../assets/jsons/items.json';\nimport NexomonJSON from '../assets/jsons/nexomon-extinction.json';\nimport StatusJSON from '../assets/jsons/status-effects.json';\nimport TypeJSON from '../assets/jsons/type-effectiveness.json';\nimport VaultJSON from '../assets/jsons/vaults-and-keys.json';\nexport const server_calls = {\n  items: () => {\n    let result = ItemsJSON;\n    return result;\n  },\n  nexomon: () => {\n    let result = NexomonJSON;\n    return result;\n  },\n  status: () => {\n    let result = StatusJSON;\n    return result;\n  },\n  type: () => {\n    let result = TypeJSON;\n    return result;\n  },\n  vaults: () => {\n    let result = VaultJSON;\n    return result;\n  },\n  signin: async function () {\n    let email = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'spongebob@example.com';\n    let password = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Patrick1!';\n    const response = await fetch('https://ct-nexopedia-adamschellenberg.herokuapp.com/signin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    });\n\n    // if (!response.ok) {\n    //     throw new Error ('Failed to login')\n    // };\n    console.log('Response: ', response);\n    return response;\n  },\n  signup: () => {},\n  logout: () => {}\n};","map":{"version":3,"names":["ItemsJSON","NexomonJSON","StatusJSON","TypeJSON","VaultJSON","server_calls","items","result","nexomon","status","type","vaults","signin","email","password","response","fetch","method","headers","body","JSON","stringify","console","log","signup","logout"],"sources":["C:/Users/adams/Documents/Nexopedia/frontend/src/api/server.js"],"sourcesContent":["import ItemsJSON from '../assets/jsons/items.json';\r\nimport NexomonJSON from '../assets/jsons/nexomon-extinction.json';\r\nimport StatusJSON from '../assets/jsons/status-effects.json';\r\nimport TypeJSON from '../assets/jsons/type-effectiveness.json';\r\nimport VaultJSON from '../assets/jsons/vaults-and-keys.json';\r\n\r\n\r\nexport const server_calls = {\r\n    items: () => {\r\n        let result = ItemsJSON;\r\n        return result;\r\n    },\r\n\r\n    nexomon: () => {\r\n        let result = NexomonJSON;\r\n        return result;\r\n    },\r\n\r\n    status: () => {\r\n        let result = StatusJSON;\r\n        return result;\r\n    },\r\n\r\n    type: () => {\r\n        let result = TypeJSON;\r\n        return result;\r\n    },\r\n\r\n    vaults: () => {\r\n        let result = VaultJSON;\r\n        return result;\r\n    },\r\n\r\n    signin: async (email='spongebob@example.com', password='Patrick1!') => {\r\n        const response = await fetch('https://ct-nexopedia-adamschellenberg.herokuapp.com/signin', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password\r\n            })\r\n        });\r\n\r\n        // if (!response.ok) {\r\n        //     throw new Error ('Failed to login')\r\n        // };\r\n        console.log ('Response: ', response);\r\n        return response;\r\n    },\r\n\r\n    signup: () => {\r\n\r\n    },\r\n\r\n    logout: () => {\r\n\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,4BAA4B;AAClD,OAAOC,WAAW,MAAM,yCAAyC;AACjE,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,QAAQ,MAAM,yCAAyC;AAC9D,OAAOC,SAAS,MAAM,sCAAsC;AAG5D,OAAO,MAAMC,YAAY,GAAG;EACxBC,KAAK,EAAE,MAAM;IACT,IAAIC,MAAM,GAAGP,SAAS;IACtB,OAAOO,MAAM;EACjB,CAAC;EAEDC,OAAO,EAAE,MAAM;IACX,IAAID,MAAM,GAAGN,WAAW;IACxB,OAAOM,MAAM;EACjB,CAAC;EAEDE,MAAM,EAAE,MAAM;IACV,IAAIF,MAAM,GAAGL,UAAU;IACvB,OAAOK,MAAM;EACjB,CAAC;EAEDG,IAAI,EAAE,MAAM;IACR,IAAIH,MAAM,GAAGJ,QAAQ;IACrB,OAAOI,MAAM;EACjB,CAAC;EAEDI,MAAM,EAAE,MAAM;IACV,IAAIJ,MAAM,GAAGH,SAAS;IACtB,OAAOG,MAAM;EACjB,CAAC;EAEDK,MAAM,EAAE,kBAA+D;IAAA,IAAxDC,KAAK,uEAAC,uBAAuB;IAAA,IAAEC,QAAQ,uEAAC,WAAW;IAC9D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAA4D,EAAE;MACvFC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBR,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA;MACd,CAAC;IACL,CAAC,CAAC;;IAEF;IACA;IACA;IACAQ,OAAO,CAACC,GAAG,CAAE,YAAY,EAAER,QAAQ,CAAC;IACpC,OAAOA,QAAQ;EACnB,CAAC;EAEDS,MAAM,EAAE,MAAM,CAEd,CAAC;EAEDC,MAAM,EAAE,MAAM,CAEd;AACJ,CAAC"},"metadata":{},"sourceType":"module"}